const ko = {
  caption: `안녕하세요. hisondev의 제작자 손한이입니다.`,

  subhead1:
`hisondev의 개발 목적은 단 하나 — 개발자의 개발 편의성을 극대화하는 것입니다.`,
  t1000:
`서버단 지원 (hisonjv)`,
  t1010:
`서버 측 지원은 hisonjv를 중심으로 이루어집니다.
저는 Spring 프레임워크로 개발할 때, 개인적으로 많은 클래스 파일을 생성해야 하는 구조가 불편했습니다.
소규모 프로젝트에서도 컨트롤러, 서비스, DTO, DAO, 그리고 각종 인터페이스 파일들을 반복적으로 만들어야 했죠.
물론 이러한 구조는 체계적인 이유가 있지만, 정말 우리가 그 구조의 목적을 알고 그 구조를 유의미하게 사용하고 있는가에 대한 의문이 들었습니다.

이런 문제의식에서 api-link와 data-model을 개발하게 되었습니다.
data-model은 DTO를 대체하며, api-link는 컨트롤러를 자동으로 생성합니다.
이를 통해 개발자는 비즈니스 로직(서비스)과 DB 관련 로직에만 집중할 수 있습니다.

한 개발자 친구가 제 프로젝트를 보고 “이건 택배기사가 택배를 네 방까지 배달하겠다는 거 아니야? 보안은 괜찮아?”라고 농담을 던졌지만😅,
저는 “그럼 더 편리한 거 아닌가? 택배기사님이 눈을 가리고 들어오신다면? 내 방까지 택배만 전달될 수 있는 통로가 있다면?” 이런 생각을 했고, 더 열심히 프로젝트를 이어갔습니다.

그래서 api-link는 보안, 인터셉터, 예외 처리에 대한 커스터마이징 포인트를 충분히 열어두었습니다.
또한 data-model과 api-link에 정의된 모든 클래스는 상속이 가능하도록 설계했습니다.
사용자는 자신의 프로젝트 스타일에 맞게 쉽게 확장하고 수정할 수 있습니다.

마지막으로 utils 라이브러리는 소규모 프로젝트에서 유용하게 쓸 수 있는 공용 유틸리티 메서드 모음집입니다.`,
  t1100:
`클라이언트단 지원 (hisonjs, hisonvue)`,
  t1110:
`클라이언트 측 지원은 hisonjs와 hisonvue를 중심으로 이루어집니다.

첫째, hisonjs는 서버단의 hisonjv와 함께 사용할 수 있도록 설계된 클라이언트 사이드 라이브러리입니다.
hison.data의 DataWrapper와 DataModel은 서버단의 data-model과 완벽히 호환되며,
hison.link는 api-link와의 API 통신을 원활히 지원합니다.
또한 CachingModule, hison.utils, hison.shield 등 다양한 기능을 제공합니다.
모든 코드는 TypeScript로 작성되어 완전한 IntelliSense 지원을 제공합니다.

둘째, hisonvue는 Vue용 UI 컴포넌트 라이브러리입니다.
hisonjs 위에 구축되어 있으며, npm install hisonvue 한 번으로 두 라이브러리를 모두 사용할 수 있습니다.
현재 25개의 주요 컴포넌트를 제공하며, 몇몇은 실제 개발에서 자주 필요하지만 구현 난이도가 높은 요소들입니다.

고백하지만 저는 게으른 개발자입니다. 근태에 게으른 건 절대 아닙니다😂.
동일한 소스를 작성하는 것을 극도로 싫어하며, 작은 기능도 코드 리팩터링과 모듈화에 대한 심도 있는 고민을 합니다.
소규모 프로젝트를 진행할 때 각 프로젝트마다 기본적으로 필요할 확률이 매우 높은, 하지만 구현 난이도는 높아 외부 라이브러리를 설치해야 하는 컴포넌트들에 대한 고민이 많았습니다(에디터, 그리드 같은).
외부 라이브러리를 설치할 때마다 해당 프로젝트에 맞는 UI를 적용해야 하는 번거로움도 싫었습니다.
때문에 웬만큼 사용될 만한 컴포넌트는 모두 구현해 두었으며, 제공하는 hison 객체를 통해 UI적 요소를 공통으로 관리할 수 있도록 하였습니다.

hisonvue의 모든 컴포넌트는 hison 객체를 통해 동적으로 제어할 수 있으며,
SSR을 지원해 Vue와 Nuxt 환경 모두에서 사용 가능합니다.
특히 HInput, HInputGroup 컴포넌트는 데이터 관리에 특화된 다양한 기능을 제공합니다.
hisonvue는 hisonjs를 확장하므로, 데이터 모델링, API 통신, 유틸리티, 보안 기능까지 함께 사용할 수 있고
서버단의 hisonjv와도 자연스럽게 연동됩니다.`,
  t1200:
`결과적으로 hisondev는 서버와 클라이언트 양쪽 모두에서 개발 생산성을 향상시키고, 양단의 연계를 자연스럽게 만듭니다.
소규모 프로젝트 개발에 특히 유용한 솔루션을 제공합니다.
MIT 라이선스로 자유롭게 마음껏 사용하세요!😀`,

  subhead2:
`제 개발자로서의 삶을 설명드리자면, 유년 시절로 돌아가야 할 것 같습니다.`,
  t2000:
`어린 시절 저는 ‘RPG 만들기 95’라는 게임에 푹 빠졌습니다.`,
  t2005:
`이미지 출처: Alchetron – RPG Maker 95`,
  h2005:
`https://alchetron.com/RPG-Maker-95`,
  t2010:
`아버지가 사주신 그 CD 한 장은, 무언가를 만드는 걸 좋아하던 제게 강렬한 몰입을 주었습니다.
처음에는 단순하게 제작하던 게임을, 혼자서 콘셉트와 스토리를 기획하고 커뮤니티 웹사이트를 통해 전문가 수준의 형들이 만든 유틸을 다운로드받아 저만의 RPG 게임으로 발전시켰습니다.
특히 기억에 남는 건, 아직 초등학교 고학년도 되지 않아 함수 개념조차 모르던 제가 캐릭터와 몬스터의 x, y 좌표를 대입해 계산하고 키 입력에 이벤트를 걸어, 기존의 턴제 전투 방식을 실시간 액션 전투 방식으로 바꿨던 일입니다.
또 미분을 모르던 제가 곡선 함수를 적용해 캐릭터의 속성별 능력치를 다르게 구현했다는 사실이 지금 생각해 보면 참 놀랍습니다.
그만큼 저는 개발에 몰입하고 있었습니다.`,
  t2015:
`제가 만든 게임을 친구들에게 시켜 보고 피드백을 받아 수정하며, 커뮤니티 웹사이트에 올려 사람들과 공유하면서 개발의 즐거움을 알게 된 것 같습니다.`,
  t2020:
`어쨌든, 엄격한 아버지가 보기에는 컴퓨터 앞에 앉아 하루 종일 게임만 하는 아들의 모습이 속이 탔을 겁니다😅.
결국 ‘컴퓨터 사용 금지’ 명령이 내려졌고, 중·고등학교 진학과 학업으로 인해 ‘RPG 만들기’는 제 기억 속에서 점차 사라졌습니다.

두 번째 개발자로서의 기록은 대학 시절 이야기로 이어집니다.
저는 의료공학과를 전공했습니다. 제 전공은 소프트웨어보다는 하드웨어 쪽에 더 전문적인 지식을 요구합니다.
대학 4년 동안 소프트웨어 관련 수업은 C, C++, 비주얼베이직, 컴퓨터 환경 수업 정도로 약 4개였던 것으로 기억합니다.
유년 시절 게임이긴 했지만 컴퓨터로 무언가를 ‘만드는(개발하는)’ 경험이 있었던 덕분인지,
약간 거만하게 들릴 수도 있지만 그 수업들을 들으면서 동기들을 보며 속으로 ‘왜 이걸 못하지...?’라는 생각을 한 적이 많았습니다.
(저는 주변 동료와 트러블을 만드는 성격이 아닙니다. 오히려 제가 가진 지식을 함께 공유하고 팀 과제를 수행하는 걸 즐깁니다.)
물론 수업 자체가 어려운 수준은 아니었지만, 저는 확실히 소프트웨어 개발에 있어 남들보다 특출난 역량이 있다고 생각했습니다.

전공을 후회하지는 않습니다. 하드웨어와 공학을 공부하며 더 넓은 시야를 가질 수 있었습니다.
제 졸업 작품은 ‘도플러를 활용한 혈류 속도 측정 장비’였습니다. 센서 구매, 회로 설계부터 임베디드에 가까운 프로그램 구현, 오실로스코프를 통한 측정까지 팀원들과 함께 수행했습니다.
이 과정을 통해 현실의 문제를 해결하는 공학의 보람과 즐거움을 깨달을 수 있었습니다.`,
  t2025:
`이 경험은 현재 개발자의 길을 걷는 저에게도 큰 영향을 주었습니다.
혼자 퍼즐 같은 코드를 짜는 데 그치지 않고, 실무자와 사용자와의 협의를 통해 현실적인 문제를 해결하며,
팀원들과 공유 가능한 실제 필요한 소스 코드를 만드는 개발자가 되고자 하는 방향으로 저를 이끌었습니다.`,
  t2030:
`마지막으로 개발자로서의 또 다른 기록은 관광객 대상 한복 대여 사업입니다.

대학 졸업 후 약 3년 동안 학사장교로 군 복무를 했고, 전역 후 좋은 기회를 얻어 경복궁 인근에서 관광객에게 한복을 대여해 주는 개인 사업을 운영했습니다.
저는 당시 관광객 대상 한복 대여 사업의 특성을 심도 있게 분석하고, 주변 매장들과의 차별점을 고민했습니다.
한복에 대한 전문성과 서비스 품질, 직원 교육 등 중요하지 않은 부분이 없었지만,
실제 매출을 이끄는 핵심은 ‘온라인 마케팅’이라는 점을 빠르게 깨달았습니다.
웹사이트 운영과 SEO 관리를 전문적으로 하기 위해 외부 학원에서 HTML, CSS, JavaScript, Java 교육을 차례로 수강했습니다.
홈페이지 제작 플랫폼을 활용해 직접 사이트를 제작하고 SEO를 설정했으며,
애널리틱스를 통해 SNS, 애드워즈, 외주 마케팅의 효과를 실시간으로 분석하여 최대 효율을 달성했습니다.
방문 고객의 대략적인 연령, 국적, 방문 경로를 매일 기록하고, 영업 마감 시 날씨와 국가별 공휴일 정보를 함께 정리해 보관했습니다.
이 데이터를 통해 특정 요일이나 시기의 방문객 수를 예측할 수 있었고, 인건비 절감 등의 효과를 얻을 수 있었습니다.
결과적으로 연매출 약 3억 원의 성과를 달성했습니다.

하지만 코로나19의 여파로 관광객을 대상으로 한 제 사업은 완전히 어려워졌습니다.
당시는 정말 힘든 시기였지만, `,
  t2033:
`개인 사업을 위해 홈페이지 제작 및 사이트 운영을 경험한 것이 개발자의 길로 들어서는 계기가 되었습니다.`,
  t2037:
`이후 빠르게 국가 지원을 받아 취업 전문 학원을 통해 풀스택 개발 교육을 수료하고 취업하였으며,
현재는 하루하루 즐겁게 개발하며 성장하고 있습니다.`,
  t2040:
`결론적으로,`,
  t2050:
`첫째, 저는 개발의 즐거움을 알고 코드를 만드는 데 진심인 사람입니다.`,
  t2055:
`가장 심플하면서도 동료나 인수자가 이해하기 쉬운 코드를 작성하기 위해 깊이 고민하며,
프로젝트를 완성해 나가는 과정에서 큰 보람을 느낍니다.
무언가를 만드는 즐거움을 기본적으로 느끼는 성향이라, 사실 개발 업무가 일처럼 느껴지지 않는 순간이 많습니다😂.
또한 현실의 문제를 해결하는 중요성과 그 보람을 잘 알고 있습니다.`,
  t2060:
`둘째, 저는 어떤 곳에서 근무하던 함께 일하고 싶은 동료가 되기위해 노력합니다.`,
  t2065:
`먼저 어디에서 어떤 업무를 하든, 시스템 전체를 우선적으로 이해하려 노력합니다.
작은 이슈에도 전체적인 구조를 고려해 문제의 근본적인 해결책을 찾으며 개선을 위해 노력합니다.
나름의 사회적 경험이 많으며, 근무하는 곳마다 상사로부터 “이 일에 진심이며 함께 일하고 싶은 사람”이라는 말을 자주 들었습니다.
자기 어필을 하자면,
대학 시절 학원 아르바이트를 하며 원장님께 학원 강사 진로를 권유받았고,
대학 졸업 시 학과장 교수님께서는 제게 본인 연구실 대학원생으로 들어오기를 강하게 권유 하였으며,
학사장교 시절 저의 대대장님께서는 장기 복무를 권유하셨고,
개발자로서는 ERP 고도화 프로젝트에 투입되어, 종료 후 운영팀에서 계속 일해 달라는 PL님의 요청으로 1년 단위 계약으로 약 5년간 근무했습니다.`,
  t2070:
`셋째, 저는 ‘성장에 있어 가성비(?) 좋은 개발자’라고 자신 있게 말할 수 있습니다.`,
  t2075:
`비전공자로 시작해 첫 회사의 연봉은 높지 않았지만, 빠르게 실력을 인정받고 1년 후 프리랜서로 전환하여 연봉을 두 배로 올렸습니다.
어린 시절부터 상대적으로 이공계열에 강했습니다. 특히 과학 탐구 영역을 좋아했으며, 시스템을 이해하고 파악하는 능력이 남들보다 뛰어나다고 생각합니다.
요즘은 인공지능을 적극적으로 활용해 더 빠르고 효율적인 성과를 내고 있습니다. 본 hisondev 프로젝트에서도 ChatGPT와 Gemini를 적극 활용했습니다.
설계와 초기 소스 구조, 프로젝트 콘셉트만 제가 만들고 나머지는 인공지능이 작성했으며, 저는 검증을 맡았고 주석은 다시 인공지능을 통해 생성했습니다.
목표를 달성하기 위해 더 다양한 접근 방식을 시도하며, 주어진 목적을 이루는 데 있어 남들보다 한발 앞서 있는 사람입니다.`,

  subhead3:
`직무 역량. 저는 JAVA, SPRING, TYPESCRIPT, 웹 DOM구조에 대한 활용과 이해, 일반 기업의 ERP 도메인 이해, 특히 관계형 DB구조와 SQL 튜닝에 강합니다.`,
  t3000:
`다양한 산업 환경에서 ERP 시스템을 중심으로 실무에 밀접한 개발과 운영을 경험해왔으며, 사용자 요구를 빠르게 파악하고 이를 시스템에 반영하는 데 강점을 가진 개발자입니다.
기술적 완성도뿐 아니라 현업의 흐름과 문제의 본질을 이해하며 업무 효율성과 시스템 안정성을 동시에 추구해왔습니다.

초기에는 산업은행 ERP 시스템 고도화 프로젝트에 참여하여 인력관리 시스템과 Knox 시스템 간 데이터 연계 작업을 수행하였습니다.
이 과정에서 복잡한 엔터프라이즈 환경에서의 데이터 흐름과 외부 시스템과의 연동 경험을 쌓았으며, Spring Framework, JSP, Oracle을 활용한 백엔드 개발과 SVN 기반의 형상관리 환경에서의 협업에도 익숙해졌습니다.

이후 삼우종합건축사사무소에서 재무회계, 인사관리, 외주관리 등 전사 시스템 운영과 유지보수를 지속적으로 맡아왔으며, 다양한 모듈에 대한 설계, 개발, 개선을 담당하였습니다.
공통 모듈의 유지보수와 배치 로직 개발에도 적극적으로 기여하였으며, 국내 주소 자동 등록, 시스템 초기화 등 반복 업무를 자동화함으로써 개발자 및 운영자 모두의 작업 효율을 높였습니다.
Jenkins를 활용한 자동 빌드 및 배포 환경을 운영 및 개선하고, SVN을 통한 안정적인 형상관리와 코드 표준 준수에도 노력을 기울였습니다. 이러한 기반 작업은 전체 시스템의 운영 안정성과 유지보수 편의성을 높이는 데 큰 역할을 했습니다.

재무회계 시스템의 경우, 전표 관리, 재무제표 출력, 결산 보고 등 주요 회계 기능을 중심으로 도메인 지식을 바탕으로 한 로직 개선과 화면 설계를 진행하였습니다.
단순한 데이터 처리뿐 아니라 손익분석, 결산 시점의 잔액 조회, 미수채권 현황 등 회계 담당자들이 실무적으로 필요로 하는 관점에서 기능을 개선 및 구현했습니다.
특히 손익현황 조회 및 대차대조표 화면의 경우, 대용량 통계 데이터를 효율적으로 처리하기 위해 SQL 튜닝을하였고, 결과적으로 기존 대비 응답 속도를 획기적으로 향상시켰습니다.

또한 외주 ERP 시스템 및 사외 협력업체 전용 사이트의 운영을 맡아, 실제 협력업체와의 유선 응대를 통해 오류 상황을 진단하고 실시간으로 문제를 해결해왔습니다.
기성금액 산정, 지불 조건 변경, 수행 평가, 중대재해 방지법에 따른 안전 평가 등 복잡한 현업 정책을 시스템화하는 작업을 실무자와 함께 협의하고, 직접 설계 및 구현했습니다.

이처럼 저는 단순한 기능 구현을 넘어, 사용자의 니즈를 파악하고 그에 맞는 기술적 해석을 통해 안정적인 시스템으로 구현하는 데 집중해 왔습니다.
요구사항 분석부터 개발, 테스트, 운영까지 전 단계에서 일관된 품질과 책임감을 유지하며, 앞으로도 기술과 실무의 연결고리 역할을 충실히 수행하고자 합니다.`,

  subhead4:
`세부 경력 사항`,
  t4000:
`근무 기간: 2020. 11 ~ 2021. 12`,
  t4010:
`근무 회사: 주식회사 넥스트아이씨티`,
  t4020:
`부서/직급: IT개발팀/사원`,
  t4025:
`고용 형태: 정규직`,
  t4030:
`산업은행 ERP 시스템 개발 프로젝트 투입.
삼성 SDI의 인사 관리 시스템을 산업은행 ERP에 적용.
기존 데이터 마이그레이션.
인력 관리, 퇴직자 관리, 급여, 연말정산 등 로직 운영 및 유지 보수`,
  t4100:
`근무 기간: 2022. 01 ~ 2022. 12`,
  t4110:
`근무 회사: 한국소프트랩`,
  t4120:
`부서/직급: 전산팀/사원`,
  t4125:
`고용 형태: 프리랜서`,
  t4130:
`삼우종합건축사사무소 재무회계, 인사관리 시스템 유지보수 및 ERP 고도화 프로젝트 투입.
재무상태표, 손익계산서, 대차대조표 화면 개발, 사내 특성에 맞는 프로젝트별 원가 실적 현황, 부서별 손익 현황 화면 개발
보증보험 관리 화면 개발
법인카드 사용내역에 대한 일괄 법인카드 영수증 첨부파일 다운로드 로직 개발
전사 공통 소스 개발. 전표 및 재무제표 관리 시스템 개발. 재무, 인사 시스템 통합 테스트.
spring, jsp, oracle, svn, jenkins 사용.`,
  t4200:
`근무 기간: 2023. 01 ~ 2023. 12`,
  t4210:
`근무 회사: 한국소프트랩`,
  t4220:
`부서/직급: 전산팀/사원`,
  t4225:
`고용 형태: 프리랜서`,
  t4230:
`삼우종합건축사사무소 재무회계, 외주관리 시스템 및 사외 협력업체 외주관리 시스템 운영.
접속자 1000명 규모 재무회계 및 사내 외주 ERP 시스템 운영. 외부 협력 업체 접속 사이트 관리.
재무 공통, 예산, 경비, 전표, 재무제표, 손익, 자금, 해외 재무 등 전반적인 재무회계  ERP 시스템 운영 및 유지 보수
재무회계 경비 처리 시스템 운영. 경비 처리 계정 분할에 따른 출장비, 법인카드 사용, 교통비 등 예산 내역 처리 시스템 개선.
국세청을 통한 거래처 사업자 유효성 검증 스케줄러, 외상매입금 입금 데이터 펌뱅킹 전송 로직 개발.
spring, jsp, oracle, svn, jenkins 사용.`,
  t4300:
`근무 기간: 2024. 01 ~ 2024. 12`,
  t4310:
`근무 회사: 한국소프트랩`,
  t4320:
`부서/직급: 전산팀/대리`,
  t4325:
`고용 형태: 프리랜서`,
  t4330:
`삼우종합건축사사무소 재무회계, 외주관리 시스템 및 사외 협력업체 외주관리 시스템 운영.
공통 소스 운영 및 보완. 배치 활용 국내 주소 업로드 로직 개선, 개발자에게 필요한 공용 소스 개발.
외주 ERP 시스템의 기성금액 지불조건 변경 로직, 외주 업체 수행평가 로직, 중대재해 방지법에 따른 외주 업체 안전관리 평가 로직 등 실무자와 협의 하여 설계 및 개발.
전표 발행, 접수, 승인 로직 개발, 계정별 잔액 조회, 반제 전표 관리 등 개발
사외 협력업체 외주관리 사이트 운영에 따른 협력업체와 유선으로 고객응대(에러 처리 등)
spring, jsp, oracle, svn, jenkins 사용.`,
  t4400:
`근무 기간: 2025. 01 ~ 2025. 12`,
  t4410:
`근무 회사: 한국소프트랩`,
  t4420:
`부서/직급: 전산팀/대리`,
  t4425:
`고용 형태: 프리랜서`,
  t4430:
`삼우종합건축사사무소 재무회계, 외주관리 시스템 및 사외 협력업체 외주관리 시스템 운영.
재무회계 ERP 시스템의 손익현황, 실적현황, 대차대조표 등 손익, 결산 관리 로직의 쿼리 개선. 실무자와 요구사항에 따른 미수채권 관리 화면 설계 및 개발. 예산 조회 쿼리 튜닝 및 성능 개선.
전표 관리 시스템 내부 로직 개선. 각 화면별로 분리되어있던 전표 생성 로직을 하나의 공용 전표 생성 로직으로 통합
spring, jsp, oracle, svn, jenkins 사용.`,

  subhead5:
`보유 자격증`,
  t5000:
`SQL 전문가`,
  t5010:
`발행처: 한국데이터산업진흥원`,
  t5020:
`취득월: 2025.09`,
  t5100:
`정보처리기사`,
  t5110:
`발행처: 한국산업인력공단`,
  t5120:
`취득월: 2021.06`,
  t5200:
`리눅스마스터 2급`,
  t5210:
`발행처: 한국정보통신진흥협회`,
  t5220:
`취득월: 2021.04`,
  t5300:
`컴퓨터활용능력 2급`,
  t5310:
`발행처: 대한상공회의소`,
  t5320:
`취득월: 2009.12`,

  subhead6:
`연락문의`,
  t6000:
`hison0319@gmail.com`,
  t6010:
`어떤 연락이든 환영합니다!😀`,
} as const;

export default ko;